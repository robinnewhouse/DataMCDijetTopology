# IMPORT PYAMI CLIENT MODULE AND API STATIC FUNCTION
import pyAMI.client
import pyAMI.atlas.api as api
import json
import sys

samples = {}

samples["pythia dijet mc15c"] = [
        "mc15_13TeV.361020.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ0W.evgen.EVNT.e3569",
        "mc15_13TeV.361021.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ1W.evgen.EVNT.e3569",
        "mc15_13TeV.361022.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ2W.evgen.EVNT.e3668",
        "mc15_13TeV.361023.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ3W.evgen.EVNT.e3668",
        "mc15_13TeV.361024.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ4W.evgen.EVNT.e3668",
        "mc15_13TeV.361025.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ5W.evgen.EVNT.e3668",
        "mc15_13TeV.361026.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ6W.evgen.EVNT.e3569",
        "mc15_13TeV.361027.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ7W.evgen.EVNT.e3668",
        "mc15_13TeV.361028.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ8W.evgen.EVNT.e3569",
        "mc15_13TeV.361029.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ9W.evgen.EVNT.e3569",
        "mc15_13TeV.361030.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ10W.evgen.EVNT.e3569",
        "mc15_13TeV.361031.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ11W.evgen.EVNT.e3569",
        "mc15_13TeV.361032.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ12W.evgen.EVNT.e3668"
        ]


samples["herwig dijet mc15c"] = [
        "mc15_13TeV.426040.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ0W.evgen.EVNT.e4410",
        "mc15_13TeV.426041.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ1W.evgen.EVNT.e4410",
        "mc15_13TeV.426042.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ2W.evgen.EVNT.e4410",
        "mc15_13TeV.426043.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ3W.evgen.EVNT.e4410",
        "mc15_13TeV.426044.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ4W.evgen.EVNT.e4410",
        "mc15_13TeV.426045.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ5W.evgen.EVNT.e4410",
        "mc15_13TeV.426046.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ6W.evgen.EVNT.e4410",
        "mc15_13TeV.426047.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ7W.evgen.EVNT.e4410",
        "mc15_13TeV.426048.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ8W.evgen.EVNT.e4410",
        "mc15_13TeV.426049.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ9W.evgen.EVNT.e4410",
        "mc15_13TeV.426050.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ10W.evgen.EVNT.e4410",
        "mc15_13TeV.426051.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ11W.evgen.EVNT.e4410",
        "mc15_13TeV.426052.HerwigppEvtGen_UEEE5_CTEQ6L1_jetjet_JZ12W.evgen.EVNT.e4410"
        ]

samples["WZ+jets_mc15c"] = [
    "mc15_13TeV.304673.Herwigpp_UEEE5CTEQ6L1_Wjhadronic_280_500.evgen.EVNT.e4571",
    "mc15_13TeV.304674.Herwigpp_UEEE5CTEQ6L1_Wjhadronic_500_700.evgen.EVNT.e4571",
    "mc15_13TeV.304675.Herwigpp_UEEE5CTEQ6L1_Wjhadronic_700_1000.evgen.EVNT.e4571",
    "mc15_13TeV.304676.Herwigpp_UEEE5CTEQ6L1_Wjhadronic_1000_1400.evgen.EVNT.e4571",
    "mc15_13TeV.304677.Herwigpp_UEEE5CTEQ6L1_Wjhadronic_1400.evgen.EVNT.e4571",
    "mc15_13TeV.304678.Herwigpp_UEEE5CTEQ6L1_Zjhadronic_280_500.evgen.EVNT.e4571",
    "mc15_13TeV.304679.Herwigpp_UEEE5CTEQ6L1_Zjhadronic_500_700.evgen.EVNT.e4571",
    "mc15_13TeV.304680.Herwigpp_UEEE5CTEQ6L1_Zjhadronic_700_1000.evgen.EVNT.e4571",
    "mc15_13TeV.304681.Herwigpp_UEEE5CTEQ6L1_Zjhadronic_1000_1400.evgen.EVNT.e4571",
    "mc15_13TeV.304682.Herwigpp_UEEE5CTEQ6L1_Zjhadronic_1400.evgen.EVNT.e4571",
    "mc15_13TeV.304630.Pythia8EvtGen_A14NNPDF23LO_ZHad_700_1000.evgen.EVNT.e4581",
    "mc15_13TeV.304623.Pythia8EvtGen_A14NNPDF23LO_WHad_280_500.evgen.EVNT.e4581",
    "mc15_13TeV.304625.Pythia8EvtGen_A14NNPDF23LO_WHad_700_1000.evgen.EVNT.e4581",
    "mc15_13TeV.304626.Pythia8EvtGen_A14NNPDF23LO_WHad_1000_1400.evgen.EVNT.e4581",
    "mc15_13TeV.304631.Pythia8EvtGen_A14NNPDF23LO_ZHad_1000_1400.evgen.EVNT.e4581",
    "mc15_13TeV.304628.Pythia8EvtGen_A14NNPDF23LO_ZHad_280_500.evgen.EVNT.e4581",
    "mc15_13TeV.304629.Pythia8EvtGen_A14NNPDF23LO_ZHad_500_700.evgen.EVNT.e4581",
    "mc15_13TeV.304624.Pythia8EvtGen_A14NNPDF23LO_WHad_500_700.evgen.EVNT.e4581",
    "mc15_13TeV.304632.Pythia8EvtGen_A14NNPDF23LO_ZHad_1400.evgen.EVNT.e4581",
    "mc15_13TeV.304627.Pythia8EvtGen_A14NNPDF23LO_WHad_1400.evgen.EVNT.e4581",
    "mc15_13TeV.304707.Sherpa_CT10_Zqq_Pt280_500.evgen.EVNT.e4692",
    "mc15_13TeV.304307.Sherpa_CT10_Wqq_Pt280_500.evgen.EVNT.e4692",
    "mc15_13TeV.304708.Sherpa_CT10_Zqq_Pt500_1000.evgen.EVNT.e4692",
    "mc15_13TeV.304309.Sherpa_CT10_Wqq_Pt1000.evgen.EVNT.e4692",
    "mc15_13TeV.304709.Sherpa_CT10_Zqq_Pt1000.evgen.EVNT.e4692",
    "mc15_13TeV.304308.Sherpa_CT10_Wqq_Pt500_1000.evgen.EVNT.e4692"
]

samples["ttbar_allhad_mc15c"] = [
    "mc15_13TeV.303722.PowhegPythiaEvtGen_P2012_ttbar_hdamp172p5_allhad_mtt_1.evgen.EVNT.e4321",
    "mc15_13TeV.303726.PowhegPythiaEvtGen_P2012_ttbar_hdamp172p5_allhad_mtt_5.evgen.EVNT.e4321",
    "mc15_13TeV.303724.PowhegPythiaEvtGen_P2012_ttbar_hdamp172p5_allhad_mtt_3.evgen.EVNT.e4321",
    "mc15_13TeV.303723.PowhegPythiaEvtGen_P2012_ttbar_hdamp172p5_allhad_mtt_2.evgen.EVNT.e4321",
    "mc15_13TeV.303725.PowhegPythiaEvtGen_P2012_ttbar_hdamp172p5_allhad_mtt_4.evgen.EVNT.e4321"
]

# INIT ATLAS API
api.init()

# INSTANTIATE THE PYAMI CLIENT FOR ATLAS
client = pyAMI.client.Client('atlas')

fields = 'files.cross_section,files.gen_filt_eff,nfiles,files.events,dataset_number,generator_name'

print("# DSID NUM_EVENTS X_SECTION(fb) FILTER_EFFICIENCY GENERATOR")

for sample_name, sample_files in samples.iteritems():

    print("# " + sample_name)
    sys.stdout.flush()

    for pattern in sample_files:
        resDict = api.list_datasets(client, patterns = pattern, fields = fields)

        numFiles = 0.0
        numEvents = 0.0
        avgFiltEff = 0.0
        avgXSec = 0.0
        dsid = 0
        genName = ""

        # loop over files in dataset, calculate avg filter efficiency
        for results in resDict:
            numFiles = (float)(results['nfiles'])
            if (results['generator_name'] != 'Null'): genName = results['generator_name']
            if (results['dataset_number'] != 'Null'): dsid = (int) (results['dataset_number'])
            if (results['files_gen_filt_eff'] != 'NULL'): avgFiltEff += (float) (results['files_gen_filt_eff'])
            if (results['files_cross_section'] != 'NULL'): avgXSec += (float) (results['files_cross_section'])
            if (results['files_events'] != 'NULL'): numEvents += (float) (results['files_events'])
            pass # end loop over files

        if(numFiles != 0):
            avgFiltEff = avgFiltEff/numFiles
            avgXSec = avgXSec/numFiles

        print dsid, " ", numEvents, 1e6 * avgXSec, " ", avgFiltEff, " ", genName
        sys.stdout.flush()
